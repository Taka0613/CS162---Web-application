{"ast":null,"code":"var _jsxFileName = \"/Users/takaya/Desktop/hierarchical-todo-list-app/frontend/src/components/Auth/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form Data being sent:', formData); // Debugging line\n\n    try {\n      const response = await API.post('/auth/register', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Registration successful, response:', response.data); // Debugging line\n      navigate('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Registration error:', err.response ? err.response.data : err.message); // Debugging line\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred during registration');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        placeholder: \"Username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"oG4x7kS04vrCsKhre14bzX1JI/w=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","API","useNavigate","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","username","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","response","post","headers","data","err","_err$response","_err$response$data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","placeholder","onChange","required","type","_c","$RefreshReg$"],"sources":["/Users/takaya/Desktop/hierarchical-todo-list-app/frontend/src/components/Auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport API from '../../api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Register() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({ username: '', password: '' });\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log('Form Data being sent:', formData);  // Debugging line\n\n    try {\n      const response = await API.post('/auth/register', formData, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      console.log('Registration successful, response:', response.data);  // Debugging line\n      navigate('/');\n    } catch (err) {\n      console.error('Registration error:', err.response ? err.response.data : err.message);  // Debugging line\n      setError(err.response?.data?.message || 'An error occurred during registration');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"username\"\n          placeholder=\"Username\"\n          value={formData.username}\n          onChange={handleChange}\n          required\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}